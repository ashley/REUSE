Feb 03, 2017 2:53:02 PM codemining.util.SettingsLoader <init>
INFO: Configuration file not found. Loading defaults.
LEFT COMMENTS
RIGHT COMMENTS
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@9d5509a
#SNODE[] R: null

#EXTRACT
!!EQUAL!!
TREE 101
-(0)9
-(0)-(0)2
-(0)-(0)-(0)7
-(0)-(0)-(1)8
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)10
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)11
-(0)-(0)-(1)12
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(1)3
-(0)-(0)-(1)14
-(1)6
-(1)-(2)2
-(1)-(2)-(0)2
-(1)-(2)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)-(0)0
-(1)-(2)-(0)-(0)-(0)-(1)1
-(1)-(2)-(0)-(0)-(1)3
-(1)-(2)-(0)-(1)4
-(1)-(2)-(1)5
-(2)99
-(2)-(1)15
-(2)-(1)16
-(2)-(2)17
-(2)-(5)23
-(2)-(5)-(0)22
-(2)-(5)-(0)-(1)21
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(7)19
-(2)-(7)-(1)18
-(2)-(7)19
-(2)-(7)-(1)20
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)24
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)26
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)29
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)30
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)17
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)31
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)32
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)30
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)34
-(2)-(8)-(12)-(0)-(2)32
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)41
-(2)-(8)-(1)43
-(2)-(8)-(2)45
-(2)-(8)-(4)44
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)47
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)57
-(2)-(8)-(12)-(0)-(0)48
-(2)-(8)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(0)-(1)22
-(2)-(8)-(12)-(0)-(0)-(1)-(1)12
-(2)-(8)-(12)-(0)-(1)39
-(2)-(8)-(12)-(0)-(1)-(0)51
-(2)-(8)-(12)-(0)-(1)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)12
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)25
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(2)27
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(0)49
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)50
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)23
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(0)-(1)12
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)25
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(1)47
-(2)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(0)-(1)53
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)49
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)26
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)30
-(2)-(8)-(12)-(0)-(2)39
-(2)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(0)-(1)56
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)47
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)26
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)30
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)56
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)60
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(6)23
-(2)-(8)-(6)-(0)22
-(2)-(8)-(6)-(0)-(1)12
-(2)-(8)-(6)-(1)22
-(2)-(8)-(6)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)24
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)29
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)30
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)61
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)63
-(2)-(8)-(8)40
-(2)-(8)-(8)-(2)56
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)30
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)67
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(0)-(1)75
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)79
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)30
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)81
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)84
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)77
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)88
-(2)-(8)-(8)-(4)87
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)89
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)90
-(2)-(8)-(8)-(12)-(0)-(0)-(3)89
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)91
-(2)-(8)-(8)-(4)22
-(2)-(8)-(8)-(4)-(1)18
-(2)-(8)-(8)-(10)92
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)94
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)26
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)79
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(0)30
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(2)81
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)97
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)53
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)100
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)24
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)29
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)30
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)61
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)63
-(2)-(8)-(8)40
-(2)-(8)-(8)-(2)53
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)12
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)30
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)67
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(0)-(1)75
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)79
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)30
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)81
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)84
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)77
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)88
-(2)-(8)-(8)-(4)87
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)89
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)90
-(2)-(8)-(8)-(12)-(0)-(0)-(3)89
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)91
-(2)-(8)-(8)-(4)22
-(2)-(8)-(8)-(4)-(1)18
-(2)-(8)-(8)-(10)92
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)94
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)26
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)79
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(0)30
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(2)81
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)97
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)70

LEFT COMMENTS
RIGHT COMMENTS
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@1b1cfb87
#SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@821330f

#TRAVERSE
LEFTCHILD: CLASS: ObservableDistinctUntilChangedTest
RIGHTCHILD: null
##SNODE L: CLASS: ObservableDistinctUntilChangedTest
##SNODE L: null
##SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@6f43c82
##SNODE[] R: null

##EXTRACT
DIFF IS NOT NULL
LEFTCHILD: null
RIGHTCHILD: CLASS: FlowableDistinctUntilChanged
##SNODE L: null
##SNODE L: CLASS: FlowableDistinctUntilChanged
##SNODE[] L: null
##SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@5db6b9cd

##EXTRACT
DIFF IS NOT NULL
TREE 101
-(0)106
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)7
-(0)-(0)-(0)-(0)-(1)103
-(0)-(0)-(0)-(1)104
-(0)-(0)-(1)105
-(0)109
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)7
-(0)-(0)-(0)-(1)107
-(0)-(0)-(1)108
-(0)109
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)7
-(0)-(0)-(0)-(1)107
-(0)-(0)-(1)110
-(0)106
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)7
-(0)-(0)-(0)-(0)-(1)111
-(0)-(0)-(0)-(1)112
-(0)-(0)-(1)113
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)114
-(0)-(0)-(0)-(1)0
-(0)-(0)-(1)115
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)114
-(0)-(0)-(0)-(1)116
-(0)-(0)-(1)117
-(0)9
-(0)-(0)2
-(0)-(0)-(0)7
-(0)-(0)-(1)103
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)7
-(0)-(0)-(0)-(1)107
-(0)-(0)-(1)118
-(0)9
-(0)-(0)2
-(0)-(0)-(0)0
-(0)-(0)-(1)1
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(1)119
-(0)-(0)-(1)120
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(1)121
-(0)-(0)-(1)122
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)10
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)10
-(0)-(0)-(1)123
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)10
-(0)-(0)-(1)124
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)11
-(0)-(0)-(1)125
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(0)-(0)-(1)4
-(0)-(0)-(0)-(0)-(1)102
-(0)-(0)-(0)-(1)126
-(0)-(0)-(1)127
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)128
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(1)129
-(0)-(0)-(1)130
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)131
-(1)6
-(1)-(2)2
-(1)-(2)-(0)2
-(1)-(2)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)-(0)0
-(1)-(2)-(0)-(0)-(0)-(1)1
-(1)-(2)-(0)-(0)-(1)3
-(1)-(2)-(0)-(1)4
-(1)-(2)-(1)102
-(2)99
-(2)-(1)15
-(2)-(2)132
-(2)-(8)28
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)133
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)134
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)135
-(2)-(8)28
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)133
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)134
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)136
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)24
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)134
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)134
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)137
-(2)-(8)-(3)-(2)54
-(2)-(8)-(3)-(2)-(3)23
-(2)-(8)-(3)-(2)-(3)-(0)22
-(2)-(8)-(3)-(2)-(3)-(0)-(1)24
-(2)-(8)-(3)-(2)-(3)-(1)22
-(2)-(8)-(3)-(2)-(3)-(1)-(1)134
-(2)-(8)-(3)-(2)-(3)-(1)22
-(2)-(8)-(3)-(2)-(3)-(1)-(1)134
-(2)-(8)-(3)-(2)-(5)142
-(2)-(8)-(3)-(2)-(5)-(0)58
-(2)-(8)-(3)-(2)-(5)-(0)-(1)42
-(2)-(8)-(3)-(2)-(5)-(0)-(1)-(0)41
-(2)-(8)-(3)-(2)-(5)-(0)-(1)15
-(2)-(8)-(3)-(2)-(5)-(0)-(2)79
-(2)-(8)-(3)-(2)-(5)-(0)-(4)22
-(2)-(8)-(3)-(2)-(5)-(0)-(4)-(1)134
-(2)-(8)-(3)-(2)-(5)-(0)-(7)33
-(2)-(8)-(3)-(2)-(5)-(0)-(7)-(1)22
-(2)-(8)-(3)-(2)-(5)-(0)-(7)-(1)-(1)134
-(2)-(8)-(3)-(2)-(5)-(0)-(7)-(3)47
-(2)-(8)-(3)-(2)-(5)-(0)-(12)39
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)57
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(2)138
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(3)139
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)39
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)-(0)73
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)-(0)-(0)140
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)73
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(2)141
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)143
-(2)-(8)-(1)15
-(2)-(8)-(2)144
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)135
-(2)-(8)-(12)-(0)-(0)-(1)55
-(2)-(8)-(12)-(0)-(0)-(1)-(0)145
-(2)-(8)-(12)-(0)-(0)-(1)-(2)146
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)136
-(2)-(8)-(12)-(0)-(0)-(1)55
-(2)-(8)-(12)-(0)-(0)-(1)-(0)145
-(2)-(8)-(12)-(0)-(0)-(1)-(2)146
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)148
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)151
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)82
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)161
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)151
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)137
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)82
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)162
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)167
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)118
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)168
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(2)168
-(2)-(8)-(12)-(0)-(2)-(2)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)166
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)167
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)82
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)169
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)-(2)-(2)-(3)170
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)-(2)-(2)-(3)171
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)167
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)137
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)118
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)168
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(2)168
-(2)-(8)-(12)-(0)-(2)-(2)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)166
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)171
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)167
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)82
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)172
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)173
-(2)-(8)-(12)-(0)-(2)-(2)164
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)174
-(2)-(8)-(12)-(0)-(2)-(2)54
-(2)-(8)-(12)-(0)-(2)-(2)-(3)22
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)134
-(2)-(8)-(12)-(0)-(2)-(2)-(4)173
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(2)113
-(2)-(8)-(12)-(0)-(0)-(3)173
-(2)-(8)-(12)-(0)-(0)-(3)174
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)173
-(2)-(8)-(12)-(0)-(2)-(2)-(3)174
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)127
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)175
-(2)-(8)-(12)-(0)-(2)-(2)54
-(2)-(8)-(12)-(0)-(2)-(2)-(3)23
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)22
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)-(1)127
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)-(2)-(4)135
-(2)-(8)-(12)-(0)-(2)-(2)-(4)55
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(0)123
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(2)176
-(2)-(8)-(12)-(0)-(2)-(2)-(4)55
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(0)124
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(2)177
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)175
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(2)105
-(2)-(8)-(12)-(0)-(0)-(3)173
-(2)-(8)-(12)-(0)-(0)-(3)2
-(2)-(8)-(12)-(0)-(0)-(3)-(0)175
-(2)-(8)-(12)-(0)-(0)-(3)-(1)61
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)180
-(2)-(8)-(1)-(0)178
-(2)-(8)-(1)-(1)179
-(2)-(8)-(1)15
-(2)-(8)-(2)181
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)118
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)168
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(2)168
-(2)-(8)-(12)-(0)-(2)-(2)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)95
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)95
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)95
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)82
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)180
-(2)-(8)-(1)-(0)178
-(2)-(8)-(1)-(1)179
-(2)-(8)-(1)15
-(2)-(8)-(2)182
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)150
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)95
-(2)-(8)-(12)-(0)-(2)-(2)-(3)166
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)150
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)137
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)118
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)168
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(2)168
-(2)-(8)-(12)-(0)-(2)-(2)-(3)135
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)159
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)70
-(2)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)157
-(2)-(8)-(12)-(0)-(0)-(3)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)183
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(2)155
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)168
-(2)-(8)-(12)-(0)-(0)-(0)-(2)153
-(2)-(8)-(12)-(0)-(0)-(0)-(3)135
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)154
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)184
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)32
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)171
-(2)-(8)-(12)-(0)-(2)-(2)-(3)185
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)170
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)186
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)187
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)186
-(2)-(8)-(12)-(0)-(2)-(2)-(2)188
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)29
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)81
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)62
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)190
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)73
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)96
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(0)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(2)191
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(3)190
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(1)192
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)187
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)193
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)-(0)-(3)165
-(2)-(8)-(12)-(0)-(0)-(3)185
-(2)-(8)-(12)-(0)-(0)-(3)170
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)194
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)195
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)196
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)149
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)32
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)149
-(2)-(8)-(12)-(0)-(2)-(2)-(2)163
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)165
-(2)-(8)-(12)-(0)-(2)-(2)-(3)171
-(2)-(8)-(12)-(0)-(2)-(2)-(3)185
-(2)-(8)-(12)-(0)-(2)-(2)-(3)164
-(2)-(8)-(12)-(0)-(2)-(2)-(3)170
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)186
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)134
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)187
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)186
-(2)-(8)-(12)-(0)-(2)-(2)-(2)188
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)29
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)81
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)62
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)134
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)190
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)197
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)54
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(1)122
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)187
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)198
-(2)-(8)-(12)-(0)-(0)-(3)164
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)199
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)200
-(2)-(8)-(12)-(0)-(0)-(3)158
-(2)-(8)-(12)-(0)-(0)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(0)-(1)122
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)201
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)186
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)202
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)203
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)204
-(2)-(8)-(12)-(0)-(2)-(2)-(2)205
-(2)-(8)-(12)-(0)-(2)-(2)-(3)2
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)125
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)206
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)149
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)163
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)209
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)210
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)29
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)81
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)62
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)190
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(10)92
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)73
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)138
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)190
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)203
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)203
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)211
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(0)204
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(2)212
-(2)-(8)-(12)-(0)-(0)-(0)-(2)211
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(0)204
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)213
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)2
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)125
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)97
-(2)-(8)-(12)-(0)-(0)-(2)214
-(2)-(8)-(12)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(3)209
-(2)-(8)-(12)-(0)-(0)-(3)210
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)215
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)186
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)202
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)203
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)204
-(2)-(8)-(12)-(0)-(2)-(2)-(2)205
-(2)-(8)-(12)-(0)-(2)-(2)-(3)2
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)125
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)206
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)216
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)202
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)217
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)216
-(2)-(8)-(12)-(0)-(2)-(2)-(2)188
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)217
-(2)-(8)-(12)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)29
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)81
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)62
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)190
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(10)92
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)73
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)189
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)138
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)190
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)203
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)145
-(2)-(8)-(12)-(0)-(0)-(2)218
-(2)-(8)-(12)-(0)-(0)-(3)217
-(2)-(8)-(12)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(3)209
-(2)-(8)-(12)-(0)-(0)-(3)210
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)203
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)211
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(0)204
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(2)212
-(2)-(8)-(12)-(0)-(0)-(0)-(2)211
-(2)-(8)-(12)-(0)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(0)204
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)213
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)2
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)125
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)219
-(2)-(8)-(12)-(0)-(0)-(2)214
-(2)-(8)-(12)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(0)-(3)209
-(2)-(8)-(12)-(0)-(0)-(3)210
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)220
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)117
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)82
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)221
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)145
-(2)-(8)-(12)-(0)-(2)-(2)-(2)222
-(2)-(8)-(12)-(0)86
-(2)-(8)-(12)-(0)-(1)39
-(2)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(0)149
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(2)223
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(0)-(1)224
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(2)52
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(4)44
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(0)-(1)133
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)25
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)225
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(0)120
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(2)151
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)207
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)208
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)156
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(3)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(3)-(1)115
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(2)152
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(0)-(1)29
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(2)81
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(4)62
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)189
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)202
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)190
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(10)92
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)197
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(1)122
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)81
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)226
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)158
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)-(1)122
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)145
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)200
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)221
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)192
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)158
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)-(1)115
-(2)-(8)-(12)-(0)-(3)39
-(2)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(12)-(0)-(3)-(0)-(0)55
-(2)-(8)-(12)-(0)-(3)-(0)-(0)-(0)130
-(2)-(8)-(12)-(0)-(3)-(0)-(0)-(2)227
-(2)-(8)99
-(2)-(8)-(2)228
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)87
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)229
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)147
-(2)-(8)-(1)15
-(2)-(8)-(2)230
-(2)-(8)-(4)44
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)228
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)231
-(2)-(8)-(12)-(0)-(2)-(2)54
-(2)-(8)-(12)-(0)-(2)-(2)-(3)22
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)228
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)232
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)228
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)233
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)232
-(2)-(8)-(12)-(0)-(2)-(2)-(2)188
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)186
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)228
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)187
-(2)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)55
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(0)233
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(2)152
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)54
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(0)-(1)24
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(1)-(1)228
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(3)-(1)-(1)234
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)142
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(2)79
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(4)22
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(4)-(1)234
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(7)33
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(7)-(1)22
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(7)-(1)-(1)228
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(7)-(3)231
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(10)92
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(12)-(0)73
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(12)-(0)-(0)2
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)231
-(2)-(8)-(12)-(0)-(2)-(2)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(1)229
-(2)-(8)-(12)-(0)-(2)-(2)-(2)81
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)233
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)231
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)2
-(2)-(8)-(12)-(0)-(0)-(0)-(0)231
-(2)-(8)-(12)-(0)-(0)-(0)-(1)229
-(2)-(8)-(12)-(0)-(0)-(1)70
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)233
-(2)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(12)-(0)-(0)-(3)231
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)233
-(2)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)187
-(2)-(8)-(12)-(0)-(0)-(2)214
-(2)-(8)-(12)-(0)-(0)-(3)231
-(2)-(8)-(12)-(0)-(0)-(3)231

LEFT COMMENTS
RIGHT COMMENTS
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@25e2ab5a
#SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@35e5d0e5

#TRAVERSE
LEFTCHILD: CLASS: ObservableDistinctUntilChanged
RIGHTCHILD: null
##SNODE L: CLASS: ObservableDistinctUntilChanged
##SNODE L: null
##SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@73173f63
##SNODE[] R: null

##EXTRACT
DIFF IS NOT NULL
LEFTCHILD: null
RIGHTCHILD: CLASS: ObservableDistinctUntilChangedTest
##SNODE L: null
##SNODE L: CLASS: ObservableDistinctUntilChangedTest
##SNODE[] L: null
##SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@55562aa9

##EXTRACT
DIFF IS NOT NULL
TREE 101
-(0)9
-(0)-(0)2
-(0)-(0)-(0)0
-(0)-(0)-(1)1
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)10
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)128
-(0)-(0)-(1)235
-(1)6
-(1)-(2)2
-(1)-(2)-(0)2
-(1)-(2)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)-(0)0
-(1)-(2)-(0)-(0)-(0)-(1)1
-(1)-(2)-(0)-(0)-(1)3
-(1)-(2)-(0)-(1)4
-(1)-(2)-(1)102
-(2)99
-(2)-(1)15
-(2)-(1)16
-(2)-(2)126
-(2)-(5)23
-(2)-(5)-(0)22
-(2)-(5)-(0)-(1)236
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(7)19
-(2)-(7)-(1)18
-(2)-(7)19
-(2)-(7)-(1)20
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)24
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)26
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)29
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)30
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)126
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)224
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)32
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)30
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)34
-(2)-(8)-(12)-(0)-(2)32
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)41
-(2)-(8)-(1)43
-(2)-(8)-(2)45
-(2)-(8)-(4)44
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)133
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)47
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(0)-(1)127
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(0)-(3)-(4)47
-(2)-(8)-(12)-(0)-(0)-(3)-(4)26
-(2)-(8)-(12)-(0)-(0)-(3)-(4)30
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)127
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)235
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)24
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)29
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)30
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)61
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)63
-(2)-(8)-(8)40
-(2)-(8)-(8)-(2)127
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)133
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)30
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(0)-(1)75
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)79
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)30
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)81
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)84
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)88
-(2)-(8)-(8)-(4)87
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)89
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)90
-(2)-(8)-(8)-(12)-(0)-(0)-(3)89
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)91
-(2)-(8)-(8)-(4)22
-(2)-(8)-(8)-(4)-(1)18
-(2)-(8)-(8)-(10)92
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)94
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)26
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)79
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(0)30
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(2)81
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)78

LEFT COMMENTS
RIGHT COMMENTS
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@19fb8826
#SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@192d74fb

#TRAVERSE
LEFTCHILD: null
RIGHTCHILD: CLASS: ObservableDistinctUntilChanged
##SNODE L: null
##SNODE L: CLASS: ObservableDistinctUntilChanged
##SNODE[] L: null
##SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@4bef0fe3

##EXTRACT
DIFF IS NOT NULL
LEFTCHILD: CLASS: OperatorGroupBy
RIGHTCHILD: null
##SNODE L: CLASS: OperatorGroupBy
##SNODE L: null
##SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@62ea3440
##SNODE[] R: null

##EXTRACT
DIFF IS NOT NULL
TREE 101
-(0)9
-(0)-(0)2
-(0)-(0)-(0)114
-(0)-(0)-(1)116
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)114
-(0)-(0)-(0)-(1)116
-(0)-(0)-(1)238
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)114
-(0)-(0)-(0)-(0)-(1)116
-(0)-(0)-(0)-(1)238
-(0)-(0)-(1)239
-(0)9
-(0)-(0)237
-(0)9
-(0)-(0)2
-(0)-(0)-(0)237
-(0)-(0)-(1)149
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)121
-(0)-(0)-(1)240
-(0)9
-(0)-(0)2
-(0)-(0)-(0)237
-(0)-(0)-(1)10
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)241
-(0)-(0)-(1)242
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)3
-(0)-(0)-(1)116
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)243
-(0)-(0)-(1)244
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)128
-(0)-(0)-(1)245
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)129
-(0)-(0)-(1)246
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)237
-(0)-(0)-(0)-(1)247
-(0)-(0)-(1)248
-(1)6
-(1)-(2)2
-(1)-(2)-(0)2
-(1)-(2)-(0)-(0)237
-(1)-(2)-(0)-(1)3
-(1)-(2)-(1)4
-(2)99
-(2)-(1)15
-(2)-(1)16
-(2)-(2)249
-(2)-(6)23
-(2)-(6)-(0)22
-(2)-(6)-(0)-(1)251
-(2)-(6)-(1)23
-(2)-(6)-(1)-(0)22
-(2)-(6)-(1)-(0)-(1)244
-(2)-(6)-(1)-(1)22
-(2)-(6)-(1)-(1)-(1)20
-(2)-(6)-(1)-(1)22
-(2)-(6)-(1)-(1)-(1)250
-(2)-(6)-(1)22
-(2)-(6)-(1)-(1)18
-(2)-(7)19
-(2)-(7)-(1)18
-(2)-(7)19
-(2)-(7)-(1)20
-(2)-(7)19
-(2)-(7)-(1)250
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)252
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(2)-(1)253
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)26
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)252
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(2)-(1)253
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)250
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)254
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)87
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)255
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)62
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)256
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)252
-(2)-(8)-(2)-(1)23
-(2)-(8)-(2)-(1)-(0)22
-(2)-(8)-(2)-(1)-(0)-(1)257
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(2)-(1)23
-(2)-(8)-(2)-(1)-(0)22
-(2)-(8)-(2)-(1)-(0)-(1)258
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)234
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)259
-(2)-(8)40
-(2)-(8)-(1)180
-(2)-(8)-(1)-(0)260
-(2)-(8)-(1)-(1)263
-(2)-(8)-(1)-(1)-(0)261
-(2)-(8)-(1)-(1)-(0)262
-(2)-(8)-(1)15
-(2)-(8)-(2)249
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)267
-(2)-(8)-(12)-(0)-(1)26
-(2)-(8)-(12)-(0)-(1)50
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)252
-(2)-(8)-(12)-(0)-(1)-(1)55
-(2)-(8)-(12)-(0)-(1)-(1)-(0)264
-(2)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(1)-(2)176
-(2)-(8)-(12)-(0)-(1)2
-(2)-(8)-(12)-(0)-(1)-(0)265
-(2)-(8)-(12)-(0)-(1)-(1)266
-(2)-(8)-(12)-(0)-(1)72
-(2)-(8)-(12)-(0)-(1)95
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)249
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)250
-(2)-(8)-(7)-(3)254
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)267
-(2)-(8)-(12)-(0)-(1)26
-(2)-(8)-(12)-(0)-(1)254
-(2)-(8)-(12)-(0)-(1)2
-(2)-(8)-(12)-(0)-(1)-(0)265
-(2)-(8)-(12)-(0)-(1)-(1)266
-(2)-(8)-(12)-(0)-(1)72
-(2)-(8)-(12)-(0)-(1)95
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)249
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)250
-(2)-(8)-(7)-(3)254
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)23
-(2)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(7)-(1)-(1)-(0)-(1)257
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)23
-(2)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(7)-(1)-(1)-(0)-(1)258
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)234
-(2)-(8)-(7)-(3)259
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)267
-(2)-(8)-(12)-(0)-(1)26
-(2)-(8)-(12)-(0)-(1)254
-(2)-(8)-(12)-(0)-(1)2
-(2)-(8)-(12)-(0)-(1)-(0)265
-(2)-(8)-(12)-(0)-(1)-(1)266
-(2)-(8)-(12)-(0)-(1)72
-(2)-(8)-(12)-(0)-(1)259
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)249
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)253
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)250
-(2)-(8)-(7)-(3)254
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)87
-(2)-(8)-(7)-(3)255
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)62
-(2)-(8)-(7)-(3)256
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(7)-(1)-(1)23
-(2)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(7)-(1)-(1)-(0)-(1)257
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)23
-(2)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(7)-(1)-(1)-(0)-(1)258
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)234
-(2)-(8)-(7)-(3)259
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)254
-(2)-(8)-(12)-(0)-(0)-(1)254
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)255
-(2)-(8)-(12)-(0)-(0)-(1)255
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)256
-(2)-(8)-(12)-(0)-(0)-(1)256
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)259
-(2)-(8)-(12)-(0)-(0)-(1)259
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)41
-(2)-(8)-(1)15
-(2)-(8)-(2)268
-(2)-(8)-(4)23
-(2)-(8)-(4)-(0)22
-(2)-(8)-(4)-(0)-(1)46
-(2)-(8)-(4)-(1)25
-(2)-(8)-(4)-(1)-(1)22
-(2)-(8)-(4)-(1)-(1)-(1)18
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)23
-(2)-(8)-(7)-(1)-(1)-(1)-(0)22
-(2)-(8)-(7)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(7)-(3)269
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)51
-(2)-(8)-(12)-(0)-(0)16
-(2)-(8)-(12)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)270
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)20
-(2)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(1)-(1)250
-(2)-(8)-(12)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(0)271
-(2)-(8)-(12)-(0)86
-(2)-(8)-(12)-(0)-(1)39
-(2)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)271
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(0)-(1)270
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)250
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)269
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)26
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)254
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)255
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)256
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(4)259
-(2)-(8)-(12)-(0)-(2)85
-(2)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(0)240
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)272
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)269
-(2)-(8)-(12)-(0)-(2)-(1)-(0)51
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)23
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)-(0)-(1)46
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)-(1)25
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)-(1)-(1)22
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(1)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(2)27
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(2)-(0)273
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(2)-(2)55
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(2)-(2)-(0)245
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(2)-(2)-(2)151
-(2)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(0)273
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)274
-(2)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(12)-(0)-(2)-(1)-(0)-(0)273
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)269
-(2)-(8)-(12)-(0)-(0)-(2)275
-(2)-(8)-(12)-(0)-(0)-(3)55
-(2)-(8)-(12)-(0)-(0)-(3)-(0)248
-(2)-(8)-(12)-(0)-(0)-(3)-(2)188
-(2)-(8)-(12)-(0)-(0)-(3)-(3)54
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(3)22
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(3)-(1)276
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)142
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)58
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(1)42
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(1)-(0)41
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(1)15
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(2)268
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(4)44
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(12)39
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(12)-(0)-(0)-(0)271
-(2)-(8)-(12)-(0)-(0)-(3)-(3)-(5)-(0)-(12)-(0)-(0)-(2)277
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)55
-(2)-(8)-(12)-(0)-(0)-(0)269
-(2)-(8)-(12)-(0)-(0)-(2)278
-(2)-(8)-(12)-(0)-(0)-(3)2
-(2)-(8)-(12)-(0)-(0)-(3)-(0)271
-(2)-(8)-(12)-(0)-(0)-(3)-(1)279
-(2)-(8)-(12)-(0)73
-(2)-(8)-(12)-(0)-(0)271
-(2)-(8)99
-(2)-(8)-(1)15
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)280
-(2)-(8)-(6)22
-(2)-(8)-(6)-(1)281
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)270
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)271
-(2)-(8)-(8)40
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)280
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)270
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(3)271
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)271
-(2)-(8)-(8)-(12)-(0)-(0)-(1)271
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)69
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)282
-(2)-(8)-(8)-(7)-(3)283
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)271
-(2)-(8)-(8)-(12)-(0)-(0)-(2)284
-(2)-(8)-(8)-(12)-(0)-(0)-(3)283
-(2)-(8)99
-(2)-(8)-(1)15
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)270
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)46
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)250
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)46
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)23
-(2)-(8)-(8)-(2)-(1)-(1)-(0)22
-(2)-(8)-(8)-(2)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(2)-(1)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)64
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)252
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)252
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)250
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)254
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)87
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)255
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)256
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)258
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)234
-(2)-(8)-(8)-(2)-(1)23
-(2)-(8)-(8)-(2)-(1)-(0)22
-(2)-(8)-(8)-(2)-(1)-(0)-(1)285
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)250
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)286
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)287
-(2)-(8)-(8)-(2)-(1)23
-(2)-(8)-(8)-(2)-(1)-(0)22
-(2)-(8)-(8)-(2)-(1)-(0)-(1)244
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)250
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)288
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)280
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)279
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)287
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)289
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)59
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)234
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)290
-(2)-(8)-(8)-(3)-(2)54
-(2)-(8)-(8)-(3)-(2)-(3)22
-(2)-(8)-(8)-(3)-(2)-(3)-(1)234
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)242
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)47
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)291
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)292
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)293
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)294
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)295
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)296
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)82
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)297
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)298
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)71
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)295
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)299
-(2)-(8)-(8)40
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)270
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(7)-(3)254
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)255
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)256
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(8)-(7)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(0)-(1)257
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(0)-(1)258
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)234
-(2)-(8)-(8)-(7)-(3)259
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)64
-(2)-(8)-(8)-(12)-(0)-(0)-(1)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)254
-(2)-(8)-(8)-(12)-(0)-(0)-(1)254
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)255
-(2)-(8)-(8)-(12)-(0)-(0)-(1)255
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)256
-(2)-(8)-(8)-(12)-(0)-(0)-(1)256
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)288
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)-(1)300
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)47
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)242
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)47
-(2)-(8)-(8)-(12)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(0)-(3)255
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)279
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)280
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(4)35
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)292
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)291
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)294
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)293
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)296
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)295
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(4)70
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)299
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)295
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(0)-(0)259
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(1)286
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(0)-(1)301
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(1)289
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)-(1)289
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)23
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(0)-(1)300
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)-(1)286
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(2)302
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)259
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)54
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(3)23
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(3)-(0)-(1)303
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(3)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(1)-(3)-(4)289
-(2)-(8)-(8)99
-(2)-(8)-(8)-(1)59
-(2)-(8)-(8)-(2)303
-(2)-(8)-(8)-(6)23
-(2)-(8)-(8)-(6)-(0)22
-(2)-(8)-(8)-(6)-(0)-(1)257
-(2)-(8)-(8)-(6)-(1)22
-(2)-(8)-(8)-(6)-(1)-(1)20
-(2)-(8)-(8)-(7)19
-(2)-(8)-(8)-(7)-(1)20
-(2)-(8)-(8)-(8)28
-(2)-(8)-(8)-(8)-(1)16
-(2)-(8)-(8)-(8)-(2)23
-(2)-(8)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(8)-(2)-(0)-(1)287
-(2)-(8)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(8)-(3)27
-(2)-(8)-(8)-(8)-(3)-(0)289
-(2)-(8)-(8)-(8)40
-(2)-(8)-(8)-(8)-(2)303
-(2)-(8)-(8)-(8)-(7)33
-(2)-(8)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(8)-(7)-(1)-(0)-(1)287
-(2)-(8)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(8)-(7)-(3)289
-(2)-(8)-(8)-(8)-(12)39
-(2)-(8)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(0)-(1)289
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(1)289
-(2)-(8)-(8)-(8)58
-(2)-(8)-(8)-(8)-(1)42
-(2)-(8)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(8)-(1)15
-(2)-(8)-(8)-(8)-(2)268
-(2)-(8)-(8)-(8)-(4)44
-(2)-(8)-(8)-(8)-(7)33
-(2)-(8)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(8)-(7)-(1)-(1)20
-(2)-(8)-(8)-(8)-(7)-(3)78
-(2)-(8)-(8)-(8)-(12)39
-(2)-(8)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(0)289
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(2)304
-(2)-(8)-(8)-(8)-(12)-(0)-(0)-(3)78
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)180
-(2)-(8)-(8)-(1)-(0)260
-(2)-(8)-(8)-(1)-(1)261
-(2)-(8)-(8)-(1)305
-(2)-(8)-(8)-(2)302
-(2)-(8)-(8)-(4)23
-(2)-(8)-(8)-(4)-(0)22
-(2)-(8)-(8)-(4)-(0)-(1)258
-(2)-(8)-(8)-(4)-(1)22
-(2)-(8)-(8)-(4)-(1)-(1)234
-(2)-(8)-(8)-(4)-(1)23
-(2)-(8)-(8)-(4)-(1)-(0)22
-(2)-(8)-(8)-(4)-(1)-(0)-(1)285
-(2)-(8)-(8)-(4)-(1)-(1)22
-(2)-(8)-(8)-(4)-(1)-(1)-(1)20
-(2)-(8)-(8)-(4)-(1)-(1)22
-(2)-(8)-(8)-(4)-(1)-(1)-(1)250
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)252
-(2)-(8)-(8)-(7)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(0)-(1)257
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(0)-(1)258
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)234
-(2)-(8)-(8)-(7)-(3)259
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)257
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)306
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)50
-(2)-(8)-(8)-(12)-(0)-(0)-(0)23
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)-(1)258
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(0)-(1)50
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(0)-(1)258
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(1)253
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)55
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(0)259
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(2)268
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(3)306
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)278
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)281
-(2)-(8)-(8)-(7)-(3)47
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)47
-(2)-(8)-(8)-(12)-(0)-(0)-(2)278
-(2)-(8)-(8)-(12)-(0)-(0)-(3)47
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)287
-(2)-(8)-(8)-(12)-(0)-(1)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)307
-(2)-(8)-(8)-(12)-(0)-(2)-(2)36
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)288
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)46
-(2)-(8)-(8)-(12)-(0)-(1)-(1)25
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)189
-(2)-(8)-(8)-(12)-(0)-(2)-(2)36
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)64
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)268
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)274
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)308
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)307
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)309
-(2)-(8)-(8)-(12)-(0)-(2)-(2)77
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)310
-(2)-(8)-(8)-(12)-(0)-(2)-(2)311
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)76
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(2)290
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)312
-(2)-(8)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)286
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(2)313
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)310
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(0)-(0)312
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)292
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)313
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)312
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(0)285
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(2)314
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(3)255
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(3)35
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(3)256
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)286
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)315
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)310
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)312
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)296
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)316
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)309
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)72
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)307
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)304
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)312
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)317
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)254
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)268
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)274
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)308
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)307
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)312
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)93
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)289
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)318
-(2)-(8)-(8)-(12)-(0)-(1)-(0)321
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)319
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)318
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(1)-(0)289
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(1)-(2)91
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)320
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)286
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)313
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)318
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)320
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(0)320
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(2)160
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)309
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)156
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)82
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)246
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)297
-(2)-(8)-(8)-(12)-(0)-(0)-(1)66
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)296
-(2)-(8)-(8)-(12)-(0)-(0)-(2)322
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)323
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)326
-(2)-(8)-(8)-(12)-(0)-(0)33
-(2)-(8)-(8)-(12)-(0)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)286
-(2)-(8)-(8)-(12)-(0)-(1)-(2)325
-(2)-(8)-(8)-(12)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(2)160
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)286
-(2)-(8)-(8)-(12)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)289
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)289
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)296
-(2)-(8)-(8)-(12)-(0)-(0)-(2)322
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)284
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)282
-(2)-(8)-(8)-(7)-(3)283
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)328
-(2)-(8)-(8)-(12)-(0)-(0)-(0)283
-(2)-(8)-(8)-(12)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)197
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)54
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(1)329
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)331
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)-(0)330
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)-(1)283
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)332
-(2)-(8)-(8)-(12)-(0)-(0)-(2)333
-(2)-(8)-(8)-(12)-(0)-(0)-(3)294
-(2)-(8)-(8)-(12)-(0)-(0)-(3)283
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)277
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)292
-(2)-(8)-(8)-(12)-(0)-(0)-(2)334
-(2)-(8)-(8)-(12)-(0)-(0)-(3)72
-(2)-(8)-(8)-(12)-(0)-(0)-(3)77
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)296
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)322
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)274
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)277
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)78
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)310
-(2)-(8)-(8)-(12)-(0)-(2)-(2)311
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)76
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(2)290
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)286
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)335
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(3)310
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)296
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)322
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)274
-(2)-(8)-(8)58
-(2)-(8)-(8)-(2)317
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)299
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)316
-(2)-(8)-(8)-(12)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)87
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)336
-(2)-(8)-(8)-(12)-(0)-(2)-(2)70
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)287
-(2)-(8)-(8)-(12)-(0)-(1)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)307
-(2)-(8)-(8)-(12)-(0)-(2)-(2)36
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)288
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)46
-(2)-(8)-(8)-(12)-(0)-(1)-(1)25
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)189
-(2)-(8)-(8)-(12)-(0)-(2)-(2)36
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)64
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(2)337
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)71
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)-(0)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)-(2)338
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(3)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)282
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)294
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)313
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)282
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)340
-(2)-(8)-(8)-(12)-(0)-(3)-(0)321
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(0)341
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)71
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)244
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(0)66
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(0)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(0)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(0)66
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)337
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)341
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)342
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)343
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)340
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)2
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)-(0)344
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)-(1)345
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)332
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(2)346
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)294
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(0)299
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(2)347
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(3)348
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(3)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)342
-(2)-(8)-(8)58
-(2)-(8)-(8)-(2)308
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(7)-(3)189
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)287
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(3)307
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)82
-(2)-(8)-(8)-(7)-(3)83
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)307
-(2)-(8)-(8)-(12)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)117
-(2)-(8)-(8)-(12)-(0)-(1)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)349
-(2)-(8)-(8)-(12)-(0)-(2)-(2)54
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)23
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(0)-(1)350
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)23
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)55
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)-(0)286
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)-(2)325
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)286
-(2)-(8)-(8)-(12)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)289
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)289
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)326
-(2)-(8)-(8)-(12)-(0)-(0)33
-(2)-(8)-(8)-(12)-(0)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(1)-(1)250
-(2)-(8)-(8)-(12)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(1)349
-(2)-(8)-(8)-(12)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(0)-(3)83
-(2)-(8)-(8)58
-(2)-(8)-(8)-(2)337
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)341
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)151
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)23
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(0)-(1)244
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)-(1)250
-(2)-(8)-(8)-(7)-(3)189
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)287
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(3)307
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)341
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)351
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(2)297
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)351
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)308
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)307
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)351
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)151
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)-(0)-(2)323
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)72
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)285
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)244
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)20
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)352
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)353
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(1)59
-(2)-(8)-(8)-(2)314
-(2)-(8)-(8)-(4)23
-(2)-(8)-(8)-(4)-(0)22
-(2)-(8)-(8)-(4)-(0)-(1)285
-(2)-(8)-(8)-(4)-(1)22
-(2)-(8)-(8)-(4)-(1)-(1)20
-(2)-(8)-(8)-(4)-(1)22
-(2)-(8)-(8)-(4)-(1)-(1)18
-(2)-(8)-(8)-(6)19
-(2)-(8)-(8)-(6)-(1)18
-(2)-(8)-(8)-(6)19
-(2)-(8)-(8)-(6)-(1)20
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)78
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)255
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)270
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)271
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)256
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)352
-(2)-(8)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)353
-(2)-(8)-(8)-(12)-(0)-(2)-(2)54
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)23
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(0)-(1)352
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)255
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)271
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)78
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(4)256
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)54
-(2)-(8)-(8)-(12)-(0)-(0)-(3)23
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(0)-(1)285
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(3)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(0)-(4)78
-(2)-(8)-(8)-(12)-(0)-(0)-(4)353
-(2)-(8)-(8)40
-(2)-(8)-(8)-(1)43
-(2)-(8)-(8)-(2)285
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)78
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)352
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)353
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)78
-(2)-(8)-(8)-(12)-(0)-(2)353
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)353
-(2)-(8)-(8)-(12)-(0)-(0)-(1)353
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)353
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)156
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)82
-(2)-(8)-(8)-(7)-(3)324
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)353
-(2)-(8)-(8)-(12)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(0)-(3)324
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)160
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)353
-(2)-(8)-(8)-(12)-(0)-(0)-(2)160
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)352
-(2)-(8)-(5)22
-(2)-(8)-(5)-(1)295
-(2)-(8)-(6)22
-(2)-(8)-(6)-(1)281
-(2)-(8)-(6)22
-(2)-(8)-(6)-(1)354
-(2)-(8)-(6)23
-(2)-(8)-(6)-(0)22
-(2)-(8)-(6)-(0)-(1)355
-(2)-(8)-(6)-(1)22
-(2)-(8)-(6)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)305
-(2)-(8)-(8)-(1)59
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)282
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)356
-(2)-(8)-(8)-(3)-(2)348
-(2)-(8)-(8)-(3)-(2)-(0)357
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)78
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)287
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)234
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)288
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)270
-(2)-(8)-(8)-(2)-(1)253
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)18
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)271
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)256
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)293
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)294
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)298
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)71
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)82
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)297
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)291
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)292
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)358
-(2)-(8)-(8)-(2)-(1)23
-(2)-(8)-(8)-(2)-(1)-(0)22
-(2)-(8)-(8)-(2)-(1)-(0)-(1)46
-(2)-(8)-(8)-(2)-(1)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)64
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)291
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)359
-(2)-(8)-(8)40
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)352
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)255
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)270
-(2)-(8)-(8)-(7)-(1)-(1)253
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)271
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)78
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)256
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)288
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)-(1)300
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)271
-(2)-(8)-(8)-(12)-(0)-(0)-(1)271
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)256
-(2)-(8)-(8)-(12)-(0)-(0)-(1)256
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)292
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)291
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)64
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(0)-(1)358
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)23
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(0)-(1)46
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)25
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)359
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)291
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)294
-(2)-(8)-(8)-(12)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(0)-(1)-(3)-(1)293
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)69
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)282
-(2)-(8)-(8)-(7)-(3)283
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)328
-(2)-(8)-(8)-(12)-(0)-(0)-(0)283
-(2)-(8)-(8)-(12)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)197
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)54
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(1)329
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)331
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)-(0)360
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(4)-(1)283
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)283
-(2)-(8)-(8)-(12)-(0)-(0)-(1)340
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)332
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)333
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)294
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)283
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)361
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)292
-(2)-(8)-(8)-(12)-(0)-(0)-(2)313
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)274
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)292
-(2)-(8)-(8)-(12)-(0)-(0)-(2)334
-(2)-(8)-(8)-(12)-(0)-(0)-(3)72
-(2)-(8)-(8)-(12)-(0)-(0)-(3)77
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)316
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)271
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(2)277
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(3)78
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)268
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)47
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)359
-(2)-(8)-(8)-(12)-(0)-(0)-(2)334
-(2)-(8)-(8)-(12)-(0)-(0)-(3)72
-(2)-(8)-(8)-(12)-(0)-(0)-(3)77
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)275
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)35
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)278
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)35
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)362
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)317
-(2)-(8)-(8)-(12)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)54
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)363
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)364
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(0)-(0)66
-(2)-(8)-(8)-(12)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)297
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)54
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)-(1)183
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(0)288
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(2)304
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)55
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(0)365
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(2)366
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)66
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)156
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)82
-(2)-(8)-(8)-(7)-(3)324
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)297
-(2)-(8)-(8)-(12)-(0)-(0)-(1)324
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)160
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)317
-(2)-(8)-(8)58
-(2)-(8)-(8)-(2)317
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)316
-(2)-(8)-(8)-(12)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)87
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)336
-(2)-(8)-(8)-(12)-(0)-(2)-(2)70
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)287
-(2)-(8)-(8)-(12)-(0)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)307
-(2)-(8)-(8)-(12)-(0)-(2)-(2)288
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(0)16
-(2)-(8)-(8)-(12)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)256
-(2)-(8)-(8)-(12)-(0)-(2)-(2)36
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)35
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(1)256
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)23
-(2)-(8)-(8)-(12)-(0)-(1)-(0)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)46
-(2)-(8)-(8)-(12)-(0)-(1)-(1)25
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)189
-(2)-(8)-(8)-(12)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(0)64
-(2)-(8)-(8)-(12)-(0)-(2)-(2)-(2)313
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)337
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)71
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)-(0)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)-(2)338
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)256
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)282
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(0)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(0)294
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)-(2)313
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)282
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(2)-(2)192
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)321
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(0)341
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)71
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(1)234
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)307
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(0)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(2)337
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)341
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)256
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)151
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)342
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)-(0)365
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)-(2)367
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)343
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)340
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)339
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(1)2
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(0)344
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(1)-(1)345
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(0)332
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(2)346
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(3)294
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)2
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)-(0)271
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(0)-(1)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(2)347
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(3)348
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)-(3)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)336
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)192
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)342
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)-(0)64
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)-(2)313
-(2)-(8)-(8)58
-(2)-(8)-(8)-(2)337
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)341
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)151
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)189
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)62
-(2)-(8)-(8)-(7)-(3)256
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)292
-(2)-(8)-(8)-(12)-(0)-(0)-(2)313
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)288
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)271
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)277
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)341
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)256
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)151
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(0)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(2)297
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(2)-(0)-(0)-(2)323
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(0)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(2)297
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)-(0)288
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)-(2)327
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)-(2)156
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)-(3)324
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(0)151
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)-(0)-(0)189
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)-(0)-(2)323
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)72

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 4
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 5
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 6
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 7
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 8
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
WARNING: Failed to get AST for beforeFiles java.lang.ArrayIndexOutOfBoundsException: 9
	at TestTreeLM.main(TestTreeLM.java:91)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:02 PM TestTreeLM main
INFO: Loaded 4 files containing 5362 nodes
=======Iteration 0==============
Log-Prob: -1292.90 (1556 nodes with avg log-prob -0.831)
Size Stats: 1-5:323 6-15:45 16-30:2 >30:2
Avg Tree Size: 5.18
=======Iteration 1==============
Log-Prob: -991.56 (1556 nodes with avg log-prob -0.637)
Size Stats: 1-5:275 6-15:30 16-30:2 >30:3
Avg Tree Size: 6.02
=======Iteration 2==============
Log-Prob: -839.58 (1556 nodes with avg log-prob -0.540)
Size Stats: 1-5:233 6-15:29 16-30:4 >30:3
Avg Tree Size: 6.78
=======Iteration 3==============
Log-Prob: -764.27 (1556 nodes with avg log-prob -0.491)
Size Stats: 1-5:223 6-15:25 16-30:4 >30:2
Avg Tree Size: 7.12
=======Iteration 4==============
Log-Prob: -699.33 (1556 nodes with avg log-prob -0.449)
Size Stats: 1-5:212 6-15:28 16-30:1 >30:1
Avg Tree Size: 7.43
Feb 03, 2017 2:53:04 PM TestTreeLM main
INFO: Sampling complete. Outputing burnin grammar...
Feb 03, 2017 2:53:04 PM codemining.util.serialization.KryoSerialization serialize
INFO: Serializing object of type codemining.lm.tsg.FormattedTSGrammar to tsg.ser
Feb 03, 2017 2:53:04 PM codemining.util.serialization.KryoSerialization serialize
INFO: Serializing object of type codemining.lm.tsg.samplers.CollapsedGibbsSampler to tsgSamplerCheckpoint.ser
Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.MethodDeclaration.setExtraDimensions(MethodDeclaration.java:1070)
	at org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetIntProperty(MethodDeclaration.java:414)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.MethodDeclaration.setExtraDimensions(MethodDeclaration.java:1070)
	at org.eclipse.jdt.core.dom.MethodDeclaration.internalGetSetIntProperty(MethodDeclaration.java:414)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.SingleVariableDeclaration.internalGetSetIntProperty(SingleVariableDeclaration.java:295)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree Operation only supported in JLS2, JLS3 and JLS4 ASTs java.lang.UnsupportedOperationException: Operation only supported in JLS2, JLS3 and JLS4 ASTs
	at org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4(ASTNode.java:2002)
	at org.eclipse.jdt.core.dom.VariableDeclaration.internalSetExtraDimensions(VariableDeclaration.java:307)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.internalGetSetIntProperty(VariableDeclarationFragment.java:176)
	at org.eclipse.jdt.core.dom.ASTNode.setStructuralProperty(ASTNode.java:1716)
	at codemining.ast.java.JavaAstTreeExtractor.addSimplePropertyToASTNode(JavaAstTreeExtractor.java:202)
	at codemining.ast.java.JavaAstTreeExtractor.getASTNodeForTreeNode(JavaAstTreeExtractor.java:570)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:506)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

Feb 03, 2017 2:53:04 PM codemining.ast.java.JavaAstTreeExtractor getASTFromTree
WARNING: Failed to get ASTNode for subtree null java.lang.IllegalArgumentException
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:108)
	at codemining.ast.java.JavaAstTreeExtractor.getASTFromTree(JavaAstTreeExtractor.java:503)
	at codemining.ast.java.AbstractJavaTreeExtractor.getCodeFromTree(AbstractJavaTreeExtractor.java:64)
	at codemining.lm.tsg.FormattedTSGrammar.toString(FormattedTSGrammar.java:112)
	at TestTreeLM.main(TestTreeLM.java:152)
	at Test.main(Test.java:33)

********
Type : 1 Child Props: [bodyDeclarations, ]:
----------------------------------------
Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:apply, ]
-(0)-(4)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(4)-(1)Type : SimpleName Simple Props: [identifier:Object, ]
-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(0)-(7)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(7)-(3)Type : SimpleName Simple Props: [identifier:m, ]
-(0)-(10)Type : SimpleName Simple Props: [identifier:Exception, ]
-(0)-(12)Type : Block Child Props: [statements, ]
-(0)-(12)-(0)Type : ReturnStatement Child Props: [expression, ]
-(0)-(12)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:m, ]
-(0)-(12)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:value, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.5 (1)
----------------------------------------
Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:boolean, ] Child Props: [annotations, ]
-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(0)-(12)Type : Block Child Props: [statements, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.5 (1)
********
Type : 78 Child Props: [typeName, ]:
----------------------------------------
Type : MarkerAnnotation Child Props: [typeName, ]
-(0)Type : SimpleName Simple Props: [identifier:Test, ]
_________________________________
@Test
>Prob 1.0 (8)
********
Type : 8 Child Props: [statements, ]:
----------------------------------------
Type : Block Child Props: [statements, ]
-(0)Type : ReturnStatement Child Props: [expression, ]
-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:a, ]
-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:equals, ]
-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:b, ]
_________________________________
{
  return a.equals(b);
}

>Prob 0.4 (2)
----------------------------------------
Type : Block Child Props: [statements, ]
-(0)Type : ThrowStatement Child Props: [expression, ]
-(0)-(0)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(0)-(0)-(3)Type : SimpleType Child Props: [annotations, name, ]
_________________________________
{
  throw new DUMMY_NAME();
}

>Prob 0.4 (2)
----------------------------------------
Type : Block Child Props: [statements, ]
-(0)Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : ExpressionStatement Child Props: [expression, ]
-(0)-(0)Type : Assignment Simple Props: [operator:=, ] Child Props: [leftHandSide, rightHandSide, ]
-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:w2, ]
-(0)-(0)-(1)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:TestHelper, ]
-(0)-(0)-(1)-(2)Type : SimpleName Simple Props: [identifier:mockObserver, ]
_________________________________
{
  'X';
  w2=TestHelper.mockObserver();
}

>Prob 0.2 (1)
********
Type : 35 Child Props: [javadoc, annotations, name, ]:
----------------------------------------
Type : PackageDeclaration Child Props: [javadoc, annotations, name, ]
-(2)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(0)-(1)Type : SimpleName Simple Props: [identifier:operators, ]
-(2)-(1)Type : SimpleName Simple Props: [identifier:observable, ]
_________________________________
package DUMMY_QNAME.DUMMY.operators.observable;

>Prob 1.0 (1)
********
Type : 21 Child Props: [expression, ]:
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
MISSING();

>Prob 0.45 (9)
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:onComplete, ]
_________________________________
MISSING().onComplete();

>Prob 0.25 (5)
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
_________________________________
MISSING().subscribe(w);

>Prob 0.15 (3)
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : Assignment Simple Props: [operator:=, ] Child Props: [leftHandSide, rightHandSide, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:w, ]
-(0)-(1)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:TestHelper, ]
-(0)-(1)-(2)Type : SimpleName Simple Props: [identifier:mockObserver, ]
_________________________________
w=TestHelper.mockObserver();

>Prob 0.05 (1)
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
_________________________________
MISSING().onNext("b");

>Prob 0.05 (1)
----------------------------------------
Type : ExpressionStatement Child Props: [expression, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:source, ]
-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(0)-(3)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:BiPredicate, ]
-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(0)-(3)Type : SimpleName Simple Props: [identifier:ts, ]
_________________________________
source.distinctUntilChanged(new BiPredicate<DUMMY_NAME,DUMMY_NAME>(){
}
).subscribe(ts);

>Prob 0.05 (1)
********
Type : 15 Child Props: [imports, package, types, ]:
----------------------------------------
Type : CompilationUnit Child Props: [imports, package, types, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:true, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:junit, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:Assert, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:assertSame, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:true, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:mockito, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:ArgumentMatchers, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:true, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:mockito, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:Mockito, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:true, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:testng, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:AssertJUnit, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:assertNotSame, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:java, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:io, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:IOException, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:java, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:util, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:List, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:junit, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:org, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:mockito, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:InOrder, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:disposables, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:Disposables, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:exceptions, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:TestException, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:functions, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:functions, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:Functions, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:functions, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:ObjectHelper, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:internal, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:fuseable, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:QueueDisposable, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:io, ]
-(0)-(0)-(0)-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:reactivex, ]
-(0)-(0)-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:internal, ]
-(0)-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:operators, ]
-(0)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:observable, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:ObservableDistinctUntilChanged, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:DistinctUntilChangedObserver, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:observers, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:false, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:plugins, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:RxJavaPlugins, ]
-(0)Type : ImportDeclaration Simple Props: [onDemand:true, static:false, ] Child Props: [name, ]
-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:subjects, ]
-(1)Type : PackageDeclaration Child Props: [javadoc, annotations, name, ]
-(2)Type : TypeDeclaration Simple Props: [interface:false, ] Child Props: [javadoc, modifiers, name, superclass, superInterfaces, superclassType, superInterfaceTypes, typeParameters, bodyDeclarations, ]
-(2)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(2)Type : SimpleName Simple Props: [identifier:ObservableDistinctUntilChangedTest, ]
-(2)-(8)Type : FieldDeclaration Child Props: [javadoc, modifiers, type, fragments, ]
-(2)-(8)-(2)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(2)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(2)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(3)-(0)Type : SimpleName Simple Props: [identifier:w, ]
-(2)-(8)Type : FieldDeclaration Child Props: [javadoc, modifiers, type, fragments, ]
-(2)-(8)-(2)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(2)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(2)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(3)-(0)Type : SimpleName Simple Props: [identifier:w2, ]
-(2)-(8)Type : FieldDeclaration Child Props: [javadoc, modifiers, type, fragments, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:final, ]
-(2)-(8)-(2)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(2)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(2)-(0)-(1)Type : SimpleName Simple Props: [identifier:Function, ]
-(2)-(8)-(2)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(2)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(3)-(0)Type : SimpleName Simple Props: [identifier:TO_UPPER_WITH_EXCEPTION, ]
-(2)-(8)-(3)-(2)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(3)-(2)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(3)-(2)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)-(2)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:Function, ]
-(2)-(8)-(3)-(2)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)-(2)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)-(2)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(3)-(2)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:apply, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(4)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(7)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(7)-(3)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)Type : IfStatement Child Props: [expression, thenStatement, elseStatement, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:equals, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"x", ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)Type : Block Child Props: [statements, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)-(0)Type : ReturnStatement Child Props: [expression, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(1)-(0)-(0)Type : StringLiteral Simple Props: [escapedValue:"xx", ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)Type : ReturnStatement Child Props: [expression, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(3)-(2)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:toUpperCase, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Before, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:before, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfNone, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onError, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:any, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(3)Type : TypeLiteral Child Props: [type, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onComplete, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Test, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfNoneWithKeySelector, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:anyString, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfNormalSource, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"e", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleName Simple Props: [identifier:InOrder, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"e", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfNormalSourceWithKeySelector, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"C", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"B", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"e", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"B", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onError, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:any, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(3)Type : TypeLiteral Child Props: [type, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedDoesntUpdateReferenceUnlessChanged, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:first, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleName Simple Props: [identifier:String, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:second, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)Type : SimpleName Simple Props: [identifier:String, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)Type : SimpleName Simple Props: [identifier:first, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertNotSame, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:first, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:second, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : SimpleName Simple Props: [identifier:first, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : SimpleName Simple Props: [identifier:second, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)-(1)Type : SimpleName Simple Props: [identifier:String, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:observer, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)-(1)Type : SimpleName Simple Props: [identifier:String, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)Type : SimpleName Simple Props: [identifier:w, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(0)Type : SimpleName Simple Props: [identifier:Functions, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(2)Type : SimpleName Simple Props: [identifier:identity, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(0)Type : SimpleName Simple Props: [identifier:ObjectHelper, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(4)-(2)Type : SimpleName Simple Props: [identifier:equalsPredicate, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:observer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onComplete, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertSame, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:first, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:observer, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(1)Type : SimpleName Simple Props: [identifier:last, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Test, ]
-(2)-(8)-(1)Type : SingleMemberAnnotation Child Props: [typeName, value, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Ignore, ]
-(2)-(8)-(1)-(1)Type : StringLiteral Simple Props: [escapedValue:"Null values no longer allowed", ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfSourceWithNulls, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleName Simple Props: [identifier:InOrder, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Test, ]
-(2)-(8)-(1)Type : SingleMemberAnnotation Child Props: [typeName, value, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Ignore, ]
-(2)-(8)-(1)-(1)Type : StringLiteral Simple Props: [escapedValue:"Null values no longer allowed", ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:testDistinctUntilChangedOfSourceWithExceptionsFromKeySelector, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : NullLiteral
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Test, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:customComparator, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:source, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:BiPredicate, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)-(1)Type : SimpleName Simple Props: [identifier:String, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:boolean, ] Child Props: [annotations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ReturnStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : InfixExpression Simple Props: [operator:==, ] Child Props: [leftOperand, rightOperand, extendedOperands, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:a, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:compareToIgnoreCase, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:b, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(1)Type : NumberLiteral Simple Props: [token:0, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertValues, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"A", ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"C", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertNoErrors, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertComplete, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:customComparatorThrows, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertValue, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertNotComplete, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertError, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : TypeLiteral Child Props: [type, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:TestException, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)-(0)Type : SimpleName Simple Props: [identifier:Test, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:fused, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)-(1)Type : SimpleName Simple Props: [identifier:Integer, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:newTest, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)Type : SimpleName Simple Props: [identifier:QueueDisposable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)Type : SimpleName Simple Props: [identifier:ANY, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:4, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:5, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:BiPredicate, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:boolean, ] Child Props: [annotations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)Type : SimpleName Simple Props: [identifier:a, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)Type : SimpleName Simple Props: [identifier:b, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(10)Type : SimpleName Simple Props: [identifier:Exception, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertOf, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:assertFuseable, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertOf, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:assertFusionMode, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleName Simple Props: [identifier:QueueDisposable, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleName Simple Props: [identifier:SYNC, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertResult, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:4, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:5, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:fusedAsync, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(1)Type : SimpleName Simple Props: [identifier:TestObserver, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:newTest, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(0)Type : SimpleName Simple Props: [identifier:QueueDisposable, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)-(1)Type : SimpleName Simple Props: [identifier:ANY, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(1)Type : SimpleName Simple Props: [identifier:UnicastSubject, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:up, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:UnicastSubject, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:create, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:up, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:boolean, ] Child Props: [annotations, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(10)Type : SimpleName Simple Props: [identifier:Exception, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:TestHelper, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:emit, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:up, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:4, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:5, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:to, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertOf, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:assertFuseable, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertOf, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:ObserverFusion, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(1)-(1)Type : SimpleName Simple Props: [identifier:Integer, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:assertFusionMode, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleName Simple Props: [identifier:QueueDisposable, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleName Simple Props: [identifier:ASYNC, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertResult, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:4, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:5, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:ignoreCancel, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(1)Type : SimpleName Simple Props: [identifier:List, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(1)-(1)Type : SimpleName Simple Props: [identifier:Throwable, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:errors, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:TestHelper, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:trackPluginErrors, ]
-(2)-(8)-(12)-(0)Type : TryStatement Child Props: [resources, body, catchClauses, finally, ]
-(2)-(8)-(12)-(0)-(1)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:wrap, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:ObservableSource, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(0)-(1)Type : SimpleName Simple Props: [identifier:Observer, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)Type : WildcardType Simple Props: [upperBound:false, ] Child Props: [annotations, bound, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(1)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)-(3)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onSubscribe, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(0)Type : SimpleName Simple Props: [identifier:Disposables, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(2)Type : SimpleName Simple Props: [identifier:empty, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:2, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:3, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onError, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(3)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(3)-(3)-(1)Type : SimpleName Simple Props: [identifier:IOException, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:s, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onComplete, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)-(0)Type : SimpleName Simple Props: [identifier:Override, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:boolean, ] Child Props: [annotations, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(7)Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(10)Type : SimpleName Simple Props: [identifier:Exception, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(0)-(3)-(5)-(0)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:test, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertFailure, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)Type : TypeLiteral Child Props: [type, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:TestHelper, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertError, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:errors, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)Type : NumberLiteral Simple Props: [token:0, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)Type : TypeLiteral Child Props: [type, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:IOException, ]
-(2)-(8)-(12)-(0)-(3)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)-(3)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(3)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(3)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:RxJavaPlugins, ]
-(2)-(8)-(12)-(0)-(3)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:reset, ]
-(2)-(8)Type : TypeDeclaration Simple Props: [interface:false, ] Child Props: [javadoc, modifiers, name, superclass, superInterfaces, superclassType, superInterfaceTypes, typeParameters, bodyDeclarations, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:Mutable, ]
-(2)-(8)-(8)Type : FieldDeclaration Child Props: [javadoc, modifiers, type, fragments, ]
-(2)-(8)-(8)-(2)Type : PrimitiveType Simple Props: [primitiveTypeCode:int, ] Child Props: [annotations, ]
-(2)-(8)-(8)-(3)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(8)-(3)-(0)Type : SimpleName Simple Props: [identifier:value, ]
-(2)-(8)Type : MethodDeclaration Simple Props: [constructor:false, extraDimensions:0, ] Child Props: [javadoc, modifiers, name, returnType, returnType2, extraDimensions2, typeParameters, parameters, receiverType, receiverQualifier, thrownExceptions, thrownExceptionTypes, body, ]
-(2)-(8)-(1)Type : MarkerAnnotation Child Props: [typeName, ]
-(2)-(8)-(1)Type : Modifier Simple Props: [keyword:public, ]
-(2)-(8)-(2)Type : SimpleName Simple Props: [identifier:mutableWithSelector, ]
-(2)-(8)-(4)Type : PrimitiveType Simple Props: [primitiveTypeCode:void, ] Child Props: [annotations, ]
-(2)-(8)-(12)Type : Block Child Props: [statements, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:m, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(3)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)-(8)-(12)-(0)-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(1)-(0)-(1)Type : SimpleName Simple Props: [identifier:PublishSubject, ]
-(2)-(8)-(12)-(0)-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)-(8)-(12)-(0)-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(2)-(8)-(12)-(0)-(2)-(0)Type : SimpleName Simple Props: [identifier:pp, ]
-(2)-(8)-(12)-(0)-(2)-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(0)Type : SimpleName Simple Props: [identifier:PublishSubject, ]
-(2)-(8)-(12)-(0)-(2)-(2)-(2)Type : SimpleName Simple Props: [identifier:create, ]
-(2)-(8)-(12)-(0)Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:pp, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:m, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : Assignment Simple Props: [operator:=, ] Child Props: [leftHandSide, rightHandSide, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:m, ]
-(2)-(8)-(12)-(0)-(0)-(0)-(1)Type : SimpleName Simple Props: [identifier:value, ]
-(2)-(8)-(12)-(0)-(0)-(1)Type : NumberLiteral Simple Props: [token:1, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:pp, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:m, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:pp, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:onComplete, ]
-(2)-(8)-(12)-(0)Type : ExpressionStatement Child Props: [expression, ]
-(2)-(8)-(12)-(0)-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(8)-(12)-(0)-(0)-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)-(8)-(12)-(0)-(0)-(2)Type : SimpleName Simple Props: [identifier:assertResult, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:m, ]
-(2)-(8)-(12)-(0)-(0)-(3)Type : SimpleName Simple Props: [identifier:m, ]
_________________________________
Cannot get AST representation of rule
>Prob 1.0 (1)
********
Type : 40 Child Props: [qualifier, name, ]:
----------------------------------------
Type : QualifiedName Child Props: [qualifier, name, ]
-(0)Type : SimpleName Simple Props: [identifier:io, ]
-(1)Type : SimpleName Simple Props: [identifier:reactivex, ]
_________________________________
io.reactivex
>Prob 0.7272727272727273 (8)
----------------------------------------
Type : QualifiedName Child Props: [qualifier, name, ]
-(0)Type : QualifiedName Child Props: [qualifier, name, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:io, ]
-(0)-(1)Type : SimpleName Simple Props: [identifier:reactivex, ]
-(1)Type : SimpleName Simple Props: [identifier:internal, ]
_________________________________
io.reactivex.internal
>Prob 0.2727272727272727 (3)
********
Type : 44 Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]:
----------------------------------------
Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(1)Type : SimpleType Child Props: [annotations, name, ]
-(3)Type : SimpleName Simple Props: [identifier:b, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.5 (4)
----------------------------------------
Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(1)Type : SimpleType Child Props: [annotations, name, ]
-(1)-(1)Type : SimpleName Simple Props: [identifier:Integer, ]
-(3)Type : SimpleName Simple Props: [identifier:a, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.25 (2)
----------------------------------------
Type : SingleVariableDeclaration Simple Props: [extraDimensions:0, varargs:false, ] Child Props: [modifiers, type, varargsAnnotations, name, extraDimensions2, initializer, ]
-(1)Type : SimpleType Child Props: [annotations, name, ]
-(3)Type : SimpleName Simple Props: [identifier:a, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.25 (2)
********
Type : 57 Child Props: [type, ]:
----------------------------------------
Type : TypeLiteral Child Props: [type, ]
-(0)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(1)Type : SimpleName Simple Props: [identifier:Throwable, ]
_________________________________
Throwable.class
>Prob 0.8333333333333334 (5)
----------------------------------------
Type : TypeLiteral Child Props: [type, ]
-(0)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(1)Type : SimpleName Simple Props: [identifier:NullPointerException, ]
_________________________________
NullPointerException.class
>Prob 0.16666666666666666 (1)
********
Type : 59 Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]:
----------------------------------------
Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(2)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(2)-(3)Type : SimpleName Simple Props: [identifier:w, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.36363636363636365 (4)
----------------------------------------
Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(0)Type : SimpleName Simple Props: [identifier:ts, ]
-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.2727272727272727 (3)
----------------------------------------
Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(2)Type : SimpleName Simple Props: [identifier:empty, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.18181818181818182 (2)
----------------------------------------
Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
-(0)Type : SimpleName Simple Props: [identifier:source, ]
-(2)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)-(0)Type : SimpleName Simple Props: [identifier:Observable, ]
-(2)-(2)Type : SimpleName Simple Props: [identifier:just, ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"b", ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"B", ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"A", ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
-(2)-(3)Type : StringLiteral Simple Props: [escapedValue:"C", ]
_________________________________
Cannot get AST representation of rule
>Prob 0.18181818181818182 (2)
********
Type : 74 Child Props: [type, typeArguments, ]:
----------------------------------------
Type : ParameterizedType Child Props: [type, typeArguments, ]
-(0)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(1)Type : SimpleName Simple Props: [identifier:Observable, ]
-(1)Type : SimpleType Child Props: [annotations, name, ]
_________________________________
Observable<DUMMY_NAME>
>Prob 1.0 (8)
********
Type : 32 Child Props: [expression, typeArguments, name, arguments, ]:
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:times, ]
-(3)Type : NumberLiteral Simple Props: [token:1, ]
_________________________________
times(1)
>Prob 0.28735632183908044 (25)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
inOrder.verify(w,MISSING())
>Prob 0.12643678160919541 (11)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(3)-(2)Type : SimpleName Simple Props: [identifier:never, ]
_________________________________
verify(w,never())
>Prob 0.08045977011494253 (7)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(3)Type : StringLiteral Simple Props: [escapedValue:"a", ]
_________________________________
inOrder.verify(w,MISSING()).onNext("a")
>Prob 0.06896551724137931 (6)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:anyString, ]
_________________________________
anyString()
>Prob 0.05747126436781609 (5)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(3)-(2)Type : SimpleName Simple Props: [identifier:never, ]
_________________________________
inOrder.verify(w,never())
>Prob 0.05747126436781609 (5)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onError, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
MISSING().onError(MISSING())
>Prob 0.04597701149425287 (4)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:any, ]
-(3)Type : TypeLiteral Child Props: [type, ]
_________________________________
any(int.class)
>Prob 0.04597701149425287 (4)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(3)Type : SimpleName Simple Props: [identifier:TO_UPPER_WITH_EXCEPTION, ]
_________________________________
src.distinctUntilChanged(TO_UPPER_WITH_EXCEPTION)
>Prob 0.034482758620689655 (3)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
MISSING().onNext(MISSING())
>Prob 0.034482758620689655 (3)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
_________________________________
verify(w,MISSING())
>Prob 0.034482758620689655 (3)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:src, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(2)Type : SimpleName Simple Props: [identifier:subscribe, ]
-(3)Type : SimpleName Simple Props: [identifier:w, ]
_________________________________
src.distinctUntilChanged().subscribe(w)
>Prob 0.034482758620689655 (3)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(3)Type : NullLiteral
_________________________________
inOrder.verify(w,MISSING()).onNext(null)
>Prob 0.022988505747126436 (2)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : SimpleName Simple Props: [identifier:TestObserver, ]
-(2)Type : SimpleName Simple Props: [identifier:create, ]
_________________________________
TestObserver.create()
>Prob 0.022988505747126436 (2)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:inOrder, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:verify, ]
-(0)-(3)Type : SimpleName Simple Props: [identifier:w, ]
-(0)-(3)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(3)Type : StringLiteral Simple Props: [escapedValue:"c", ]
_________________________________
inOrder.verify(w,MISSING()).onNext("c")
>Prob 0.022988505747126436 (2)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)-(0)Type : SimpleName Simple Props: [identifier:pp, ]
-(0)-(2)Type : SimpleName Simple Props: [identifier:distinctUntilChanged, ]
-(0)-(3)Type : ClassInstanceCreation Child Props: [typeArguments, expression, name, type, arguments, anonymousClassDeclaration, ]
-(0)-(3)-(3)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(0)-(3)-(3)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(3)-(3)-(0)-(1)Type : SimpleName Simple Props: [identifier:Function, ]
-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(3)-(3)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(0)-(3)-(3)-(1)-(1)Type : SimpleName Simple Props: [identifier:Object, ]
-(0)-(3)-(5)Type : AnonymousClassDeclaration Child Props: [bodyDeclarations, ]
-(2)Type : SimpleName Simple Props: [identifier:test, ]
_________________________________
pp.distinctUntilChanged(new Function<DUMMY_NAME,Object>(){
}
).test()
>Prob 0.011494252873563218 (1)
----------------------------------------
Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(0)Type : MethodInvocation Child Props: [expression, typeArguments, name, arguments, ]
-(2)Type : SimpleName Simple Props: [identifier:onNext, ]
-(3)Type : StringLiteral Simple Props: [escapedValue:"e", ]
_________________________________
MISSING().onNext("e")
>Prob 0.011494252873563218 (1)
********
Type : 43 Child Props: [annotations, name, ]:
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:String, ]
_________________________________
String
>Prob 0.44285714285714284 (31)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:Integer, ]
_________________________________
Integer
>Prob 0.24285714285714285 (17)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:Mutable, ]
_________________________________
Mutable
>Prob 0.08571428571428572 (6)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:TestObserver, ]
_________________________________
TestObserver
>Prob 0.05714285714285714 (4)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:TestException, ]
_________________________________
TestException
>Prob 0.04285714285714286 (3)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:InOrder, ]
_________________________________
InOrder
>Prob 0.02857142857142857 (2)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:Observer, ]
_________________________________
Observer
>Prob 0.02857142857142857 (2)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:DistinctUntilChangedObserver, ]
_________________________________
DistinctUntilChangedObserver
>Prob 0.02857142857142857 (2)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:BiPredicate, ]
_________________________________
BiPredicate
>Prob 0.02857142857142857 (2)
----------------------------------------
Type : SimpleType Child Props: [annotations, name, ]
-(1)Type : SimpleName Simple Props: [identifier:Observable, ]
_________________________________
Observable
>Prob 0.014285714285714285 (1)
********
Type : 60 Child Props: [modifiers, type, fragments, ]:
----------------------------------------
Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(1)-(0)Type : SimpleType Child Props: [annotations, name, ]
-(1)-(1)Type : SimpleType Child Props: [annotations, name, ]
-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.75 (3)
----------------------------------------
Type : VariableDeclarationStatement Child Props: [modifiers, type, fragments, ]
-(1)Type : ParameterizedType Child Props: [type, typeArguments, ]
-(2)Type : VariableDeclarationFragment Simple Props: [extraDimensions:0, ] Child Props: [name, extraDimensions2, initializer, ]
_________________________________
Cannot get AST representation of rule
>Prob 0.25 (1)

----------------------------------------------------------------------------------------------------
Feb 03, 2017 2:53:04 PM codemining.util.serialization.KryoSerialization deserializeFrom
INFO: Deserializing object from tsg.ser
filename,entropy,cross-entropy
LEFT COMMENTS
RIGHT COMMENTS
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@4faf4191
#SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@5e88cef1

#TRAVERSE
LEFTCHILD: CLASS: FlowableDistinctUntilChanged
RIGHTCHILD: CLASS: FlowableDistinctUntilChanged
##SNODE L: CLASS: FlowableDistinctUntilChanged
##SNODE L: CLASS: FlowableDistinctUntilChanged
##SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@c2b2b92
##SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@36e73413

##TRAVERSE
LEFTCHILD: METHOD: subscribeActual(Subscriber<? super T>)
RIGHTCHILD: METHOD: subscribeActual(Subscriber<? super T>)
###SNODE L: METHOD: subscribeActual(Subscriber<? super T>)
###SNODE L: METHOD: subscribeActual(Subscriber<? super T>)
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
RIGHTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
###SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
###SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: CONSTRUCTOR: FlowableDistinctUntilChanged(Publisher<T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
RIGHTCHILD: CONSTRUCTOR: FlowableDistinctUntilChanged(Publisher<T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
###SNODE L: CONSTRUCTOR: FlowableDistinctUntilChanged(Publisher<T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
###SNODE L: CONSTRUCTOR: FlowableDistinctUntilChanged(Publisher<T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: CLASS: DistinctUntilChangedConditionalSubscriber
RIGHTCHILD: CLASS: DistinctUntilChangedConditionalSubscriber
###SNODE L: CLASS: DistinctUntilChangedConditionalSubscriber
###SNODE L: CLASS: DistinctUntilChangedConditionalSubscriber
###SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@3f14897
###SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@1b96f15e

###TRAVERSE
LEFTCHILD: FIELD: hasValue : boolean
RIGHTCHILD: FIELD: hasValue : boolean
####SNODE L: FIELD: hasValue : boolean
####SNODE L: FIELD: hasValue : boolean
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: requestFusion(int)
RIGHTCHILD: METHOD: requestFusion(int)
####SNODE L: METHOD: requestFusion(int)
####SNODE L: METHOD: requestFusion(int)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
RIGHTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: onNext(T)
RIGHTCHILD: METHOD: onNext(T)
####SNODE L: METHOD: onNext(T)
####SNODE L: METHOD: onNext(T)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: CONSTRUCTOR: DistinctUntilChangedConditionalSubscriber(ConditionalSubscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
RIGHTCHILD: CONSTRUCTOR: DistinctUntilChangedConditionalSubscriber(ConditionalSubscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE L: CONSTRUCTOR: DistinctUntilChangedConditionalSubscriber(ConditionalSubscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE L: CONSTRUCTOR: DistinctUntilChangedConditionalSubscriber(ConditionalSubscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: tryOnNext(T)
RIGHTCHILD: METHOD: tryOnNext(T)
####SNODE L: METHOD: tryOnNext(T)
####SNODE L: METHOD: tryOnNext(T)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
!!EQUAL!!
DIFF IS NOT NULL
LEFTCHILD: METHOD: poll()
RIGHTCHILD: METHOD: poll()
####SNODE L: METHOD: poll()
####SNODE L: METHOD: poll()
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: last : K
RIGHTCHILD: FIELD: last : K
####SNODE L: FIELD: last : K
####SNODE L: FIELD: last : K
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: keySelector : Function<? super T,K>
RIGHTCHILD: FIELD: keySelector : Function<? super T,K>
####SNODE L: FIELD: keySelector : Function<? super T,K>
####SNODE L: FIELD: keySelector : Function<? super T,K>
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
DIFF IS NOT NULL
LEFTCHILD: FIELD: keySelector : Function<? super T,K>
RIGHTCHILD: FIELD: keySelector : Function<? super T,K>
###SNODE L: FIELD: keySelector : Function<? super T,K>
###SNODE L: FIELD: keySelector : Function<? super T,K>
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: CLASS: DistinctUntilChangedSubscriber
RIGHTCHILD: CLASS: DistinctUntilChangedSubscriber
###SNODE L: CLASS: DistinctUntilChangedSubscriber
###SNODE L: CLASS: DistinctUntilChangedSubscriber
###SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@4eb42e05
###SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@417cdc6c

###TRAVERSE
LEFTCHILD: FIELD: hasValue : boolean
RIGHTCHILD: FIELD: hasValue : boolean
####SNODE L: FIELD: hasValue : boolean
####SNODE L: FIELD: hasValue : boolean
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: requestFusion(int)
RIGHTCHILD: METHOD: requestFusion(int)
####SNODE L: METHOD: requestFusion(int)
####SNODE L: METHOD: requestFusion(int)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
RIGHTCHILD: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE L: FIELD: comparer : BiPredicate<? super K,? super K>
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: onNext(T)
RIGHTCHILD: METHOD: onNext(T)
####SNODE L: METHOD: onNext(T)
####SNODE L: METHOD: onNext(T)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: CONSTRUCTOR: DistinctUntilChangedSubscriber(Subscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
RIGHTCHILD: CONSTRUCTOR: DistinctUntilChangedSubscriber(Subscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE L: CONSTRUCTOR: DistinctUntilChangedSubscriber(Subscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE L: CONSTRUCTOR: DistinctUntilChangedSubscriber(Subscriber<? super T>,Function<? super T,K>,BiPredicate<? super K,? super K>)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: METHOD: tryOnNext(T)
RIGHTCHILD: METHOD: tryOnNext(T)
####SNODE L: METHOD: tryOnNext(T)
####SNODE L: METHOD: tryOnNext(T)
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
!!EQUAL!!
DIFF IS NOT NULL
LEFTCHILD: METHOD: poll()
RIGHTCHILD: METHOD: poll()
####SNODE L: METHOD: poll()
####SNODE L: METHOD: poll()
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: last : K
RIGHTCHILD: FIELD: last : K
####SNODE L: FIELD: last : K
####SNODE L: FIELD: last : K
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
LEFTCHILD: FIELD: keySelector : Function<? super T,K>
RIGHTCHILD: FIELD: keySelector : Function<? super T,K>
####SNODE L: FIELD: keySelector : Function<? super T,K>
####SNODE L: FIELD: keySelector : Function<? super T,K>
####SNODE[] L: null
####SNODE[] R: null

####EXTRACT
DIFF IS NOT NULL
DIFF IS NOT NULL
TREE 101
-(0)9
-(0)-(0)2
-(0)-(0)-(0)7
-(0)-(0)-(1)8
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(1)1
-(0)-(0)-(1)10
-(0)13
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(0)-(1)3
-(0)-(0)-(0)-(1)11
-(0)-(0)-(1)12
-(0)9
-(0)-(0)2
-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)2
-(0)-(0)-(0)-(0)-(0)0
-(0)-(0)-(0)-(0)-(1)1
-(0)-(0)-(0)-(1)3
-(0)-(0)-(1)14
-(1)6
-(1)-(2)2
-(1)-(2)-(0)2
-(1)-(2)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)2
-(1)-(2)-(0)-(0)-(0)-(0)0
-(1)-(2)-(0)-(0)-(0)-(1)1
-(1)-(2)-(0)-(0)-(1)3
-(1)-(2)-(0)-(1)4
-(1)-(2)-(1)5
-(2)99
-(2)-(1)15
-(2)-(1)16
-(2)-(2)17
-(2)-(5)23
-(2)-(5)-(0)22
-(2)-(5)-(0)-(1)21
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(5)-(1)22
-(2)-(5)-(1)-(1)18
-(2)-(7)19
-(2)-(7)-(1)18
-(2)-(7)19
-(2)-(7)-(1)20
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)24
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(2)-(1)22
-(2)-(8)-(2)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)26
-(2)-(8)28
-(2)-(8)-(1)16
-(2)-(8)-(2)23
-(2)-(8)-(2)-(0)22
-(2)-(8)-(2)-(0)-(1)29
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(2)-(1)25
-(2)-(8)-(2)-(1)-(1)22
-(2)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(3)27
-(2)-(8)-(3)-(0)30
-(2)-(8)40
-(2)-(8)-(1)15
-(2)-(8)-(2)17
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)31
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)32
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)26
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(7)-(3)30
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)34
-(2)-(8)-(12)-(0)-(2)32
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(12)-(0)38
-(2)-(8)-(12)-(0)-(0)37
-(2)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)58
-(2)-(8)-(1)42
-(2)-(8)-(1)-(0)41
-(2)-(8)-(1)43
-(2)-(8)-(2)45
-(2)-(8)-(4)44
-(2)-(8)-(7)33
-(2)-(8)-(7)-(1)23
-(2)-(8)-(7)-(1)-(0)22
-(2)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(7)-(1)-(1)25
-(2)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(7)-(3)47
-(2)-(8)-(12)39
-(2)-(8)-(12)-(0)57
-(2)-(8)-(12)-(0)-(0)48
-(2)-(8)-(12)-(0)-(0)-(0)47
-(2)-(8)-(12)-(0)-(0)-(1)22
-(2)-(8)-(12)-(0)-(0)-(1)-(1)12
-(2)-(8)-(12)-(0)-(1)39
-(2)-(8)-(12)-(0)-(1)-(0)51
-(2)-(8)-(12)-(0)-(1)-(0)-(1)23
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)12
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)25
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(1)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(2)27
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(0)49
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)50
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)23
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(0)-(1)12
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)25
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(0)-(1)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(2)-(2)-(1)47
-(2)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(0)-(1)53
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)49
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)26
-(2)-(8)-(12)-(0)-(1)-(0)-(0)-(3)-(4)30
-(2)-(8)-(12)-(0)-(2)39
-(2)-(8)-(12)-(0)-(2)-(0)38
-(2)-(8)-(12)-(0)-(2)-(0)-(0)55
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(0)32
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(2)52
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)54
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)23
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(0)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(0)-(1)56
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)-(1)18
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)22
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(3)-(1)-(1)20
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)47
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)26
-(2)-(8)-(12)-(0)-(2)-(0)-(0)-(3)-(4)30
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)56
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)60
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(6)23
-(2)-(8)-(6)-(0)22
-(2)-(8)-(6)-(0)-(1)12
-(2)-(8)-(6)-(1)22
-(2)-(8)-(6)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)24
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)29
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)30
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)61
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)63
-(2)-(8)-(8)40
-(2)-(8)-(8)-(2)56
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)46
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)30
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)67
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(0)-(1)75
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)79
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)30
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)81
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)84
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)77
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)88
-(2)-(8)-(8)-(4)87
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)89
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)90
-(2)-(8)-(8)-(12)-(0)-(0)-(3)89
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)91
-(2)-(8)-(8)-(4)22
-(2)-(8)-(8)-(4)-(1)18
-(2)-(8)-(8)-(10)92
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)94
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)26
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)79
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(0)30
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(2)81
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)97
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)99
-(2)-(8)-(1)59
-(2)-(8)-(1)16
-(2)-(8)-(2)53
-(2)-(8)-(5)23
-(2)-(8)-(5)-(0)22
-(2)-(8)-(5)-(0)-(1)100
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(5)-(1)22
-(2)-(8)-(5)-(1)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)18
-(2)-(8)-(7)19
-(2)-(8)-(7)-(1)20
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)24
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)18
-(2)-(8)-(8)-(2)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)26
-(2)-(8)-(8)28
-(2)-(8)-(8)-(1)16
-(2)-(8)-(8)-(2)23
-(2)-(8)-(8)-(2)-(0)22
-(2)-(8)-(8)-(2)-(0)-(1)29
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(2)-(1)25
-(2)-(8)-(8)-(2)-(1)-(1)22
-(2)-(8)-(8)-(2)-(1)-(1)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)30
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)22
-(2)-(8)-(8)-(2)-(1)20
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)61
-(2)-(8)-(8)28
-(2)-(8)-(8)-(2)62
-(2)-(8)-(8)-(3)27
-(2)-(8)-(8)-(3)-(0)63
-(2)-(8)-(8)40
-(2)-(8)-(8)-(2)53
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)12
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)64
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)24
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)18
-(2)-(8)-(8)-(7)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)26
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)23
-(2)-(8)-(8)-(7)-(1)-(0)22
-(2)-(8)-(8)-(7)-(1)-(0)-(1)29
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(1)-(1)25
-(2)-(8)-(8)-(7)-(1)-(1)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)-(1)-(1)20
-(2)-(8)-(8)-(7)-(3)30
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)34
-(2)-(8)-(8)-(12)-(0)-(2)64
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)-(0)-(1)26
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(0)-(0)36
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(0)35
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(1)30
-(2)-(8)-(8)-(12)-(0)-(0)-(1)30
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)65
-(2)-(8)-(8)-(4)44
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)70
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)67
-(2)-(8)-(8)-(4)62
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)22
-(2)-(8)-(8)-(7)-(1)-(1)18
-(2)-(8)-(8)-(7)-(3)66
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)71
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)57
-(2)-(8)-(8)-(12)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(0)-(1)75
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(2)67
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)86
-(2)-(8)-(8)-(12)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(0)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(0)26
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(2)79
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)-(1)-(3)66
-(2)-(8)-(8)-(12)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)51
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)62
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(0)30
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(2)81
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(2)-(2)-(3)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)57
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(0)80
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(1)-(0)-(1)-(0)-(0)72
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)39
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)38
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(1)-(0)-(2)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(2)85
-(2)-(8)-(8)-(12)-(0)-(2)-(0)33
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(1)-(1)82
-(2)-(8)-(8)-(12)-(0)-(2)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)39
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(2)84
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)-(3)83
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(2)-(1)-(0)-(0)77
-(2)-(8)-(8)-(12)-(0)38
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(0)64
-(2)-(8)-(8)-(12)-(0)-(0)-(2)65
-(2)-(8)-(8)-(12)-(0)-(0)-(3)66
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)77
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)88
-(2)-(8)-(8)-(4)87
-(2)-(8)-(8)-(7)33
-(2)-(8)-(8)-(7)-(1)87
-(2)-(8)-(8)-(7)-(3)89
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)73
-(2)-(8)-(8)-(12)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(0)-(2)90
-(2)-(8)-(8)-(12)-(0)-(0)-(3)89
-(2)-(8)-(8)58
-(2)-(8)-(8)-(1)42
-(2)-(8)-(8)-(1)-(0)41
-(2)-(8)-(8)-(1)15
-(2)-(8)-(8)-(2)91
-(2)-(8)-(8)-(4)22
-(2)-(8)-(8)-(4)-(1)18
-(2)-(8)-(8)-(10)92
-(2)-(8)-(8)-(12)39
-(2)-(8)-(8)-(12)-(0)98
-(2)-(8)-(8)-(12)-(0)-(3)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)18
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)94
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)91
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)96
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)95
-(2)-(8)-(8)-(12)-(0)-(3)-(0)51
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)22
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(1)20
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)27
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(0)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(0)26
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(2)79
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(2)-(2)-(3)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)63
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)77
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)68
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(0)30
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(2)81
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)-(3)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)73
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)93
-(2)-(8)-(8)-(12)-(0)-(3)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)37
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)61
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)78
-(2)-(8)-(8)-(12)-(0)-(3)-(0)57
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)76
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(0)74
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(0)-(1)97
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)39
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)38
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)55
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(0)47
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(2)69
-(2)-(8)-(8)-(12)-(0)-(3)-(0)-(1)-(0)-(0)-(3)70

Changes: -2132.2940568204626
CROSS-ENTROPY-LEFT: -2.195977401462886
CROSS-ENTROPY-RIGHT: -2.195977401462886
CROSS-ENTROPY-AVG: -1.4644876763876804
