LEFT COMMENTS
//
//
RIGHT COMMENTS
//
//
#SNODE L: CU: null
#SNODE L: CU: null
#SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@7ed7259e
#SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@28eaa59a

#TRAVERSE
LEFTCHILD: CLASS: Circle
RIGHTCHILD: CLASS: Circle
##SNODE L: CLASS: Circle
##SNODE L: CLASS: Circle
##SNODE[] L: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@3427b02d
##SNODE[] R: [Lch.uzh.ifi.seal.changedistiller.structuredifferencing.StructureNode;@647e447

##TRAVERSE
LEFTCHILD: CONSTRUCTOR: Circle()
RIGHTCHILD: null
###SNODE L: CONSTRUCTOR: Circle()
###SNODE L: null
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
DIFF IS NOT NULL
LEFTCHILD: FIELD: listt : String[]
RIGHTCHILD: FIELD: listt : String[]
###SNODE L: FIELD: listt : String[]
###SNODE L: FIELD: listt : String[]
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: CONSTRUCTOR: Circle(double)
RIGHTCHILD: CONSTRUCTOR: Circle(double)
###SNODE L: CONSTRUCTOR: Circle(double)
###SNODE L: CONSTRUCTOR: Circle(double)
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: FIELD: PI : double
RIGHTCHILD: FIELD: PI : double
###SNODE L: FIELD: PI : double
###SNODE L: FIELD: PI : double
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: METHOD: forLoop()
RIGHTCHILD: METHOD: forLoop()
###SNODE L: METHOD: forLoop()
###SNODE L: METHOD: forLoop()
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: METHOD: getRadius()
RIGHTCHILD: METHOD: getRadius()
###SNODE L: METHOD: getRadius()
###SNODE L: METHOD: getRadius()
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: METHOD: secondForLoop()
RIGHTCHILD: METHOD: secondForLoop()
###SNODE L: METHOD: secondForLoop()
###SNODE L: METHOD: secondForLoop()
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
LEFTCHILD: null
RIGHTCHILD: FIELD: radius : double
###SNODE L: null
###SNODE L: FIELD: radius : double
###SNODE[] L: null
###SNODE[] R: null

###EXTRACT
DIFF IS NOT NULL
DIFF IS NOT NULL

Delete: Circle.Circle()
METHOD: Circle.Circle()

Insert: Circle.radius : double
FIELD: Circle.radius : double

Done
